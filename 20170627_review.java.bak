1.
package 선언구;
import 선언구;
class 프로그램명{
	변수
	생성자
	메소드
	static{}
}

2.변수 선언 위치에 따른 구분
	1. 멤버 변수
		static 변수 - 객체 생성 없이도 사용 가능
		일반 변수(instance) - 객체 생성 직후에만 사용 가능
		(* 메모리에 생성된 객체 = 사용 가능한 객체 = instance)
	
	2. 로컬 변수

3. 타입에 따른 변수 구분
	1. 참조 타입
		- 실제 사용 가능한 객체의 주소값 or null
		- 타입 개수는 제한이 없음
		 : String/사용자 정의 타입 ...

	2. 기본 타입
		- 8가지
		byte/short/int/long
		float/double
		char
		boolean

4. 자바 데이터 타입 사용 영역은?
	1. 변수의 타입
	2. 메소드의 반환타입
	3. 생성자, 메소드의 parameter(argument = 매개변수, 매개인자, 인수 , 인자..) or {}로컬 변수 선언

5. 변수 선언
	타입 변수;
	타입변수 = 값;

6. 변수 호출 문법 
	1. instance 변수
		객체 생성후 참조 변수로 변수 호출
		타입 변수 = new 생성자();
		변수.멤버변수
	2. static 변수
		Class명.변수
		- 이 변수가 메모리에 생성되는 시점? byte code 가 메모리에 로딩되면서 문제없을 경우 자동 생성

7. 메소드 구현
	[static]반환타입 메소드([..]){[..]}

8. 호출
	static 메소드
		class.메소드명([..]);
	일반 메소드
		객체 생성 직후 참조 변수로만 호출 가능
		참조변수.메소드([..])

9. 생성자
	1. class명과 동일
		class([..]){[..]}
	2. 미코딩시 컴파일시 자동생성
	3. 용도
		- 객체 생성시 호출되는 픽ㄹ수 구성 요소

		* 생성자 호출 없이도 사용 가능한 실제 객체로 생성되는 타입 두가지
			1. String ""
			2. 배열 {값1, 값2, ...}

10. int 변수에는 int값 하나
	int[] 변수에는 다수의 int값
	Person 변수 하나의 Person 객체
	Person[] 배열에는 다수의 Person 객체들
		
	